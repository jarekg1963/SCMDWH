// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using SCMDWH.Shared.Models;

namespace SCMDWH.Server.Data;

public partial class PurchasingContext : DbContext
{
    public PurchasingContext(DbContextOptions<PurchasingContext> options)
        : base(options)
    {
    }

    public virtual DbSet<ErrorDataLog> ErrorDataLog { get; set; }
    public virtual DbSet<CarAdviceMainPlanColumn> CarAdviceMainPlanComum { get; set; }
    public virtual DbSet<GlobalAppRoles> GlobalAppRoles { get; set; }

    public virtual DbSet<GlobalAppUserRoles> GlobalAppUserRoles { get; set; }

    public virtual DbSet<GlobalAppUsers> GlobalAppUsers { get; set; }

    public DbSet<GlobalAppUsersParameters> GlobalAppUsersParameters { get; set; }

    public DbSet<SCMDWH.Shared.Models.CarAdviceDictionaryCarriers> CarAdviceDictionaryCarriers { get; set; } = default!;

    public DbSet<SCMDWH.Shared.Models.CarAdviceDictionaryCustomers> CarAdviceDictionaryCustomers { get; set; } = default!;

    public DbSet<SCMDWH.Shared.Models.CarAdviceDictionaryLoadingPlace> CarAdviceDictionaryLoadingPlace { get; set; } = default!;

    public DbSet<SCMDWH.Shared.Models.CarAdviceDictionaryStatus> CarAdviceDictionaryStatuses { get; set; } = default!;

    public DbSet<SCMDWH.Shared.Models.CarAdviceDictionaryReason> CarAdviceDictionaryReasons { get; set; } = default!;

    public DbSet<SCMDWH.Shared.Models.CarAdviceDictionaryTruckType> CarAdviceDictionaryTruckTypes { get; set; } = default!;

    public DbSet<SCMDWH.Shared.Models.LogAppReportingAction> LogAppReportingActions { get; set; } = default!;

    public DbSet<SCMDWH.Shared.Models.LogAppUserActivity> LogAppUserActivity { get; set; } = default!;

    public DbSet<SCMDWH.Shared.Models.CarAdviceMainTable> CarAdviceMainTable { get; set; } = default!;

    public DbSet<SCMDWH.Shared.Models.CarAdviceDictionaryCountryCode> CarAdviceDictionaryCountryCodes { get; set; } = default!;

    public DbSet<SCMDWH.Shared.Models.CarAdviceDictionaryQuality> CarAdviceDictionaryQuality { get; set; } = default!;

    public DbSet<SCMDWH.Shared.Models.PlanningLoading> PlanningLoading { get; set; } = default!;
    //PlanningLoading


    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.UseCollation("Polish_CI_AS");


        modelBuilder.Entity<GlobalAppUsersParameters>(entity =>
        {
            entity.HasKey(e => e.UserName).HasName("PK_GlobalAppUsersParameters");

            entity.Property(e => e.UserName)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.DateMainCAFrom).HasColumnName("DateMainCAFrom");
            entity.Property(e => e.DateMainCATo).HasColumnName("DateMainCATo");

        });


        modelBuilder.Entity<ErrorDataLog>(entity =>
        {

            entity.HasKey(e => e.LogId).HasName("PK_ErrorDataLog");

            entity.Property(e => e.LogId).HasColumnName("LogId");

            entity.Property(e => e.CreatedDate).HasColumnName("CreatedDate");

            entity.Property(e => e.EventName).HasColumnName("EventName");

            entity.Property(e => e.ExceptionMessage).HasColumnName("ExceptionMessage");

            entity.Property(e => e.LogLevel).HasColumnName("LogLevel");

            entity.Property(e => e.Source).HasColumnName("Source");

            entity.Property(e => e.StackTrace).HasColumnName("StackTrace");
        });

        modelBuilder.Entity<GlobalAppRoles>(entity =>
        {
            entity.HasKey(e => e.RoleName).HasName("PK_GlobalAppPriviledges_1");

            entity.Property(e => e.RoleName)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Remarks).HasMaxLength(50);
        });

        modelBuilder.Entity<GlobalAppUserRoles>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_GlobalAppUserPriviledges");

            entity.Property(e => e.AddByUser)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.AddTime).HasColumnType("smalldatetime");
            entity.Property(e => e.RoleName)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.UserName)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false);

            entity.HasOne(d => d.RoleNameNavigation).WithMany(p => p.GlobalAppUserRoles)
                .HasForeignKey(d => d.RoleName)
                .HasConstraintName("FK_GlobalAppUserRoles_GlobalAppRoles");

            entity.HasOne(d => d.UserNameNavigation).WithMany(p => p.GlobalAppUserRoles)
                .HasForeignKey(d => d.UserName)
                .HasConstraintName("FK_GlobalAppUserRoles_GlobalAppUsers");
        });

        modelBuilder.Entity<GlobalAppUsers>(entity =>
        {
            entity.HasKey(e => e.UserName);

            entity.Property(e => e.UserName)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.Active)
                .IsRequired()
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.CreatedTime).HasColumnType("datetime");
            entity.Property(e => e.Email)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Mobile)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.Remark)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasDefaultValueSql("('')");
        });

        modelBuilder.Entity<CarAdviceMainPlanColumn>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_CarAdviceMainPlanComums");

            entity.Property(e => e.MainScreenColumn)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.UserName)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);

}