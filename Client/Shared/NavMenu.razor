@inject NavigationManager navigationManager
@using System.Security.Claims
@using SCMDWH.Shared.Models
@inject IStringLocalizer<CultureExample2> Loc

<MudDrawer @bind-Open="SideBarOpen" Elevation="1">
	<MudDrawerHeader>
		<MudAvatar Color="Color.Transparent" Size="Size.Large" >
			<MudImage Src="tpv-logo.png"></MudImage>
		</MudAvatar>
		<MudText Typo="Typo.h5" Color="Color.Primary" Style="margin-top:10px; margin-left:15px;">SCMportal</MudText>
	</MudDrawerHeader>
	<MudNavMenu>
		<MudNavLink Href="/" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">@Loc["lbHome"]</MudNavLink>
		
		
		<MudNavGroup Title=@Loc["lbCarAdvice"] Icon="@Icons.Material.Filled.EmojiTransportation" @bind-Expanded=_isExpanded>
			
			
			@if (rolaFGOperator ^ rolaFGAdmin ^ rolaSecurity )
			{
				<MudNavLink Href="/caradvice" Icon="@Icons.Material.Filled.LibraryBooks">@Loc["lbPlan"]</MudNavLink>
			}


			@if ( rolaSecurity)
			{
				
					<MudNavLink Href="/GRcarAdvice" Icon="@Icons.Material.Filled.Warehouse">Lista aut GR</MudNavLink>
				
			}


			@if (rolaGrOperator ^ rolaGrAdmin)
			{
				<MudNavGroup Title=@Loc["lbPlanGR"] Icon="@Icons.Material.Filled.Settings" Expanded="false">
				<MudNavLink Href="/GRcarAdvice" Icon="@Icons.Material.Filled.LibraryBooks">Lista aut GR</MudNavLink>
					<MudNavLink Href="/GrPalletList" Icon="@Icons.Material.Filled.LibraryBooks">Lista palet</MudNavLink>
				</MudNavGroup>
			}


			@if (rolaGrAdmin)
			{
				<MudNavGroup Title=@Loc["lbDictionaryGR"] Icon="@Icons.Material.Filled.Settings" Expanded="false">
					<MudNavLink Href="grDictionarySenderPage" Icon="@Icons.Material.Filled.TimeToLeave">@Loc["lbGrSender"]</MudNavLink>
					<MudNavLink Href="UnloadingPlacePage" Icon="@Icons.Material.Filled.LocalShipping">@Loc["lbGrUnloadingPlace"]</MudNavLink>
					<MudNavLink Href="GrStatusDictionaryPage" Icon="@Icons.Material.Filled.Payments">@Loc["lbGrCarStatus"]</MudNavLink>
				
				</MudNavGroup>
			}


			@if (rolaFGAdmin)
			{
				<MudNavGroup Title=@Loc["lbDictionary"] Icon="@Icons.Material.Filled.Settings" Expanded="false">
					<MudNavLink Href="CADCarriersPage" Icon="@Icons.Material.Filled.TimeToLeave">@Loc["lbCarriers"]</MudNavLink>
					<MudNavLink Href="CADTrackTypes" Icon="@Icons.Material.Filled.LocalShipping">@Loc["lbTruckType"]</MudNavLink>
					<MudNavLink Href="CADCustomersPage" Icon="@Icons.Material.Filled.Payments">@Loc["lbCustomers"]</MudNavLink>
					<MudNavLink Href="CADLoadingPlacePage" Icon="@Icons.Material.Filled.Domain">@Loc["lbLoadingplaces"]</MudNavLink>
					<MudNavLink Href="CADStatuCode" Icon="@Icons.Material.Filled.FactCheck">@Loc["lbStatuscodes"]</MudNavLink>
					<MudNavLink Href="CADReasonsPage" Icon="@Icons.Material.Filled.PermDeviceInformation">@Loc["lbReason"]</MudNavLink>
					<MudNavLink Href="CADQualityPage" Icon="@Icons.Material.Filled.HighQuality">@Loc["lbQuality"]</MudNavLink>
				</MudNavGroup>
			}
		</MudNavGroup>


		@if (rolaScmTools)
		{
			<SCMToolsNavMenu></SCMToolsNavMenu>
		}

		@if (rolaAdministrator)
		{
			<GlobalNavMenu></GlobalNavMenu>
		}
		<GlobalCompanyInfoNavMenu></GlobalCompanyInfoNavMenu>

	

	</MudNavMenu>
</MudDrawer>

@code {
	[Parameter]
	public bool SideBarOpen { get; set; }
	private bool rolaAdministrator;
	private bool rolaDictionary = true;
	private bool rolaScmTools;
	private bool rolaGrOperator;
	private bool rolaGrAdmin;
	private bool rolaFGOperator;
	private bool rolaFGAdmin;
	private bool rolaSecurity;

	bool _isExpanded = false;

	[CascadingParameter]
	public Task<AuthenticationState> AuthState { get; set; }

	private IEnumerable<Claim> claims = Enumerable.Empty<Claim>();

	protected async override void OnAfterRender(bool firstRender)
	{
		var authState = await AuthState;
		var user = authState.User;
		if (!user.Identity.IsAuthenticated)
		{
			navigationManager.NavigateTo("/login");
		}
		else
		{
			claims = user.Claims;
			string rolesForDisplay = user.FindFirst(c => c.Type == ClaimTypes.Role)?.Value;
			rolaAdministrator = rolesForDisplay.Contains("Administrator");
			rolaScmTools = rolesForDisplay.Contains("SCMTOOLS");
			rolaSecurity = rolesForDisplay.Contains("SECURITY");

			// Nowe role do wsprowadzenia GR 

			rolaGrOperator = rolesForDisplay.Contains("GROp");
			rolaGrAdmin = rolesForDisplay.Contains("GRAdmin");
			rolaFGAdmin = rolesForDisplay.Contains("FGAdmin");
			rolaFGOperator = rolesForDisplay.Contains("FGOp");
		}


	}
}