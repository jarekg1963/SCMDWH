@page "/OperationLogPage"
@inject HttpClient httpClient
@inject NavigationManager navigationManager
@inject ISnackbar Snackbar

@using SCMDWH.Shared.Models;

<style>
    .mud-table-cell {
        padding: 0px !important;
        font-size: small !important;
        text-transform: uppercase !important;
        text-align: left !important;
        /* font-weight: bold;*/
    }

    .thcs {
        height: 1.6em !important;
        border: 1px solid;
        background-color: #c7c7c7 !important;
        font-size: small !important;
        font-weight: bold !important;
        text-align: center !important;
        font-family: sans-serif;
    }
</style>


<MudTable Items="@LogActivityList" Dense="@dense" Hover="@hover" Bordered="@bordered" Striped="@striped" FixedFooter="true"
          FixedHeader="true" Height="38em" RowsPerPage="25" Filter="new Func<LogAppReportingAction,bool>(FilterFunc)">
    <ToolBarContent>
        <MudSpacer />
        <MudText Typo="Typo.h6">Operation log </MudText>
        <MudSpacer />
        <MudTextField @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <ColGroup>
        <col style="width: 1%;" />
        <col style="width: 10%; " />
        <col style="width: 10%;" />
        <col style="width: 10%;" />
        <col style="width: 10%;" />
        <col style="width: 10%;" />
    </ColGroup>
    <HeaderContent>
        <MudTh class="thcs"><MudTableSortLabel SortBy="new Func<LogAppReportingAction, object>(x=>x.Id)">Id</MudTableSortLabel></MudTh>
        <MudTh class="thcs">Type</MudTh>
        <MudTh class="thcs">Dateils</MudTh>
        <MudTh class="thcs">Result</MudTh>
        <MudTh class="thcs">Time</MudTh>
        <MudTh class="thcs">User</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="User Name">@context.Id</MudTd>
        <MudTd DataLabel="Email">@context.ActionType</MudTd>
        <MudTd DataLabel="Mobile">@context.ActionDetails</MudTd>
        <MudTd DataLabel="Created Time">@context.ActionResult</MudTd>
        <MudTd DataLabel="Remark">@context.ActionTime</MudTd>
        <MudTd DataLabel="Remark">@context.ActrionTriggeredByUser</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

@code {

    private bool dense = true;
    private bool hover = true;
    private bool striped = true;
    private bool bordered = true;
    private string searchString = "";

    private List<LogAppReportingAction> LogActivityList = new List<LogAppReportingAction>();

    protected override async Task OnInitializedAsync()
    {
        string link = "/api/LogAppReportingActions";
        try
        {
            LogActivityList = await httpClient.GetFromJsonAsync<List<LogAppReportingAction>>(link);
        }
        catch (Exception ex)
        {
            Snackbar.Add("Error " + ex.Message, Severity.Error, config => { config.ShowCloseIcon = false; config.Icon = Icons.Rounded.Transform; config.VisibleStateDuration = 500; });
        }
    }

    private bool FilterFunc(LogAppReportingAction element)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.ActionDetails.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.ActionType.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        return false;
    }
}
